.column
  - if @profile.user && @profile.user.kw_id.present?
    .row
      .large-12.columns 
        b Number członkowski(użytkownia): 
        = @profile.user.kw_id
  - else
    .row
      .large-12.columns 
        b Number członkowski(profilu): 
        = @profile.kw_id

  .row
    .large-12.columns 
      b Imię i nazwisko: 
      = "#{@profile.first_name} #{@profile.last_name}"

  .row
    .large-12.columns 
      b E-mail: 
      = @profile.email

  .row
    .large-12.columns 
      b Telefon: 
      = @profile.phone

  .row
    .large-12.columns 
      b Data urodzenia: 
      = @profile.birth_date
  - if @profile.application_date
    .row
      .large-12.columns 
        b Data wstąpienia do klubu: 
        = @profile.application_date
  - if @profile.date_of_death
    .row
      .large-12.columns 
        b Data śmierci: 
        = @profile.date_of_death

  .row
    .large-12.columns 
      b Miejsce urodzenia: 
      = @profile.birth_place

  .row
    .large-12.columns 
      b Pesel: 
      = @profile.pesel

  .row
    .large-12.columns 
      b Miasto: 
      = @profile.city

  .row
    .large-12.columns 
      b Kod pocztowy: 
      = @profile.postal_code

  .row
    .large-12.columns 
      b Adres zameldowania: 
      = @profile.main_address

  - if @profile.optional_address.present?
    .row
      .large-12.columns 
        b Adres kontaktowy: 
        = @profile.optional_address

  - if @profile.recommended_by.present?
    .row
      .large-12.columns 
        b Dowiedział się od: 
        = @profile.recommended_by.to_sentence

  .row
    .large-12.columns 
      b Kursy: 
      - if @profile.acomplished_courses.present?
        - @profile.acomplished_courses.each do |course|
          li
            = I18n.t("activemodel.attributes.user_management_profile_form.profile_acomplished_courses_#{course}")
      - else
        | brak

  .row
    .large-12.columns 
      b Główna grupa dyskusyjna: 
      = @profile.main_discussion_group? ? 'Tak' : 'Nie'

  .row
    .large-12.columns 
      b Dodano do grup dyskusyjnych?: 
      = @profile.added? ? 'Tak' : "Nie"

  .row
    .large-12.columns 
      b Sekcje: 
      = @profile.sections.to_sentence if @profile.sections

  - if @profile.profession.present?
    .row
      .large-12.columns 
        b Profesja: 
        = @profile.profession

  - if @profile.position.present?
    .row
      .large-12.columns 
        b Status członka: 
        - @profile.position.each do |course|
          li
            = I18n.t("activemodel.attributes.user_management_profile_form.profile_position_#{course}")

  - if @profile.remarks.present?
    .row
      .large-12.columns 
        b Uwagi: 
        = @profile.remarks
  
  - if @profile.kw_id.present?
    .row
      .large-12.columns 
        b Składki: 
        - if (@profile.position.include?('senior') || @profile.position.include?('honorable_kw'))
          span.label.secondary Zwolniony
        - else
          - Db::Membership::Fee.where(kw_id: @profile.kw_id).order(year: :desc).each_with_index do |fee, i|
            - if i == 0 && fee.year.to_i != Date.today.year.to_i
              span.label.alert = fee.year
            - else
              - if fee.payment && fee.payment.paid?
                span.label.success = fee.year
              - else
                span.label.warning = fee.year

  - if @profile.payment.present?
    .row
      .large-12.columns 
        - if @profile.payment.paid?
          .callout.success
            = "Opłacono wpisowe i składkę za rok bieżący w kwocie: #{@profile.cost}"
        - else
          .callout.warning
            = "Nie opłacono jeszcze wpisowego i składki"
            - if @profile.payment.payment_url.present?
              p
                = link_to 'Link do płatności', @profile.payment.payment_url

  .row
    .large-12.columns
      hr

  .row
    .large-8.columns
      - if @profile.accepted?
        span.label.success Zaakceptowano
      - else
        = form_for :profile, url: accept_admin_profile_path(@profile.id), method: :put do |f|
          .input-group
            span.input-group-label
              | Numer członkowski
            = f.number_field :kw_id, class: 'input-group-field', value: Db::Profile.maximum(:kw_id) + 1
            span.input-group-label
              | Data wstąpienia
            = f.date_field :application_date, class: 'input-group-field', value: Date.today
            .input-group-button
              = f.submit 'Nadaj i utwórz konto', class: 'button'

    .large-4.columns
      .text-right
        = link_to 'edytuj', edit_admin_profile_path(@profile.id, original_referrer: session[:original_referrer]), class: 'button alert'
        = link_to 'PDF', profile_path(@profile.id, format: :pdf), class: 'button warning'
        = link_to 'powrót', session[:original_referrer] || admin_profiles_path, class: 'button secondary'
