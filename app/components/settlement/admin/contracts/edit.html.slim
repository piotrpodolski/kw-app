= form_for @contract, as: :contract, url: admin_contract_path(@contract), method: :put do |f|
  - if @errors
    .row
      .large-12.columns
        .callout.alert data-closable=""
          ul
            - @errors.each do |key,value|
              li
                = "#{I18n.t("#{key}", scope: "activerecord.attributes.settlement/contract_record")} #{value.to_sentence}, "

          button.close-button aria-label=t('close_alert') data-close="" type="button" 
            span aria-hidden="true"  &times;

  .row
    .large-12.columns
      ul#edit-tabs.tabs data-tabs=""
        li.tabs-title
          a aria-selected="true" href="#new" Dane dokumentu
        - if can?(:accept, @contract) || can?(:prepayment, @contract)
          li.tabs-title.is-active
            a data-tabs-target="preaccepted" href="#preaccepted" Akceptacja merytoryczna
        - if can?(:finish, @contract)
          li.tabs-title
            a data-tabs-target="admin" href="#admin" Administracja
        li.tabs-title
          a data-tabs-target="history" href="#history" Historia zmian

      .tabs-content data-tabs-content="edit-tabs"
        #new.tabs-panel
          = render 'settlement/admin/contracts/edit/new', f: f
        - if can?(:accept, @contract) || can?(:prepayment, @contract)
          #preaccepted.tabs-panel.is-active
            = render 'settlement/admin/contracts/edit/preaccepted', f: f
        - if can?(:finish, @contract)
          #admin.tabs-panel
            = render 'settlement/admin/contracts/edit/admin', f: f
        #history.tabs-panel
          = render 'settlement/admin/contracts/edit/history', f: f

      br
      .row
        .large-8.columns
          .callout
            .row
              .large-12.columns
                = f.label :description, "Uwagi do rozliczenia"
                = f.hidden_field :description, id: 'description_body'
                trix-editor input='description_body' style='min-height: 200px'


        .large-4.columns
          .callout
            b= f.label :attachments, "Załączniki"
            = f.file_field :attachments, multiple: true

            - if @contract.attachments.any?
              ul.no-bullet
                - @contract.attachments.select{|file| !MimeMagic.by_path(file.path)&.image? }.each do |attachment|
                  li
                    = link_to attachment.url, download: File.basename(attachment.file.path) do
                      = image_tag('file.jpg', class: 'thumbnail', size: '50x50')
                      |  
                      = File.basename(attachment.file.path)
                - @contract.attachments.select{|file| MimeMagic.by_path(file.path)&.image? }.each_with_index do |photo, i|
                  - unless photo.blank? || photo.thumb.blank?
                    li
                      = image_tag photo.thumb.url, class: 'thumbnail', data: { toggle: "photo-#{i}" }, size: '50x50'

                      div id="photo-#{i}" class="reveal" data-reveal="" 
                        = image_tag photo.url
                        button.close-button aria-label=("Close reveal") data-close="" type="button" 
                          span aria-hidden="true"  &times;

      = f.submit "Zaktualizuj rozliczenie", class: 'button'
      = link_to 'pokaż rozliczenie', admin_contract_path(@contract.id), class: 'button secondary'
      = link_to 'wróć do rozliczeń', admin_contracts_path, class: 'button secondary'

.row
  .large-12.columns
    h5 Komentarze, dodatkowe informacje
    - if user_signed_in?
      .row
        .large-12.columns
          = render 'messaging/comments/comments', commentable: @contract
        .large-12.columns
          .callout
            = render 'messaging/comments/form', commentable: @contract

