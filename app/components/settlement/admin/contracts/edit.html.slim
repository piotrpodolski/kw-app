.row
  .large-12.columns
    = form_for @contract, as: :contract, url: admin_contract_path(@contract), method: :put do |f|
      - if @contract.errors.any?
        .callout.alert
          ul
            - @contract.errors.full_messages.each do |msg|
              li= msg

      .row
        .medium-6.columns
          b= f.label :title, "Nazwa rozliczenia"
          = f.text_field :title

        - if can? :manage, @contract
          .medium-3.columns
            b= f.label :state, "Status"
            = f.select :state, Settlement::ContractRecord.workflow_spec.states.keys

        .medium-3.columns
          b= f.label :cost, "Kwota rozliczenia"
          .input-group
            = f.number_field :cost, step: 0.01, class: 'input-group-field'
            span.input-group-label
                | zł

      - if can? :update, @contract
        .row
          .medium-12.columns
            = f.label :description, "Uwagi do rozliczenia"
            = f.hidden_field :description, id: 'description_body'
            trix-editor input='description_body' style='min-height: 200px'

        .row
          .medium-12.columns
            = f.label :users_names, 'Osoby zainteresowane, które otrzymają e-mail z notyfikacją o dodaniu rozliczenia'
            - names = Db::User.select(:id, :first_name, :last_name).map{|u| { id: u.id, name: u.display_name } }
            - users = @contract.users.map{|u| { id: u.id, name: u.display_name } }
            = f.text_field :users_names, 'data-tokeninput': { collection: names, options: { prePopulate: users.uniq } }.to_json
      - else
        - if @contract.description
          .row
            .medium-12.columns
              .callout
                = sanitize @contract.description

        - if @contract.users.any?
          .row
            .medium-12.columns
              .callout
                = @contract.users.map(&:display_name).to_sentence

      b= f.label :attachments, "Pliki"
      = f.file_field :attachments, multiple: true

      - if @contract.attachments.any?
        ul.no-bullet
          - @contract.attachments.select{|file| !MimeMagic.by_path(file.path).image? }.each do |attachment|
            li
              = link_to attachment.url, download: File.basename(attachment.file.path) do
                = image_tag('file.jpg', class: 'thumbnail', size: '50x50')
                |  
                = File.basename(attachment.file.path)
          - @contract.attachments.select{|file| MimeMagic.by_path(file.path).image? }.each_with_index do |photo, i|
            - unless photo.blank? || photo.thumb.blank?
              li
                = image_tag photo.thumb.url, class: 'thumbnail', data: { toggle: "photo-#{i}" }, size: '50x50'

                div id="photo-#{i}" class="reveal" data-reveal="" 
                  = image_tag photo.url
                  button.close-button aria-label=("Close reveal") data-close="" type="button" 
                    span aria-hidden="true"  &times;

      - if can? :update, @contract
        = f.submit "Zaktualizuj rozliczenie", class: 'button'
      = link_to 'wróć do rozliczeń', admin_contracts_path, class: 'button secondary'
