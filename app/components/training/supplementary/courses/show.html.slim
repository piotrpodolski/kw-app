.column
  .row
    .large-12.columns
      h3 = @course.name

  .row
    .large-6.columns
      b = t('.place')
      = @course&.place
      br
      b = t('.start_date')
      - if @course.start_date.present?
        = @course.start_date&.strftime("%d/%m/%Y %H:%M")
      - else
        = t('.later')
      br
      - if @course&.end_date.present?
        b = t('.end_date')
        = @course&.end_date&.strftime("%d/%m/%Y %H:%M")
        br
      b = t('.application_date')
      = @course&.application_date&.strftime("%d/%m/%Y %H:%M")
      br
      - if @course&.price_kw.present?
        b = t('.application_price_kw')
        = @course&.price_kw
        - if @course.price_kw
          | zł
        br
      b = t('.organizer')
      = @course&.organizer
      br
      b Limit: 
      = @course.limit
      br
      - if @course.sign_ups&.any?
        b Zapisani: 
        = @limiter.sum
      br
      - if @course.sign_ups&.any?
        b Rezerwowi:
        = @limiter.all_unpaid&.count
        br
      - if user_signed_in? && !@limiter.open?
        - if current_user.admin? || current_user.roles.include?('events')
          = form_for :manually_sign_up, url: manually_supplementary_sign_ups_path, method: :put do |a|
            = a.email_field :email
            = a.hidden_field :course_id, value: @course.id
            = a.submit 'Zapisz i wyślij link', class: 'button primary expanded'

    .large-6.columns
      = link_to 'Regulamin', page_path('events_rules'), class: 'button expanded large warning'
      - if @current_user_sign_up.present?
      - else
        - if user_signed_in?
          - if @limiter.sign_ups_started? && !@limiter.open?
            = link_to t('.sign_up'), supplementary_sign_ups_path(sign_up: {course_id: @course.id, user_id: current_user.id, email: current_user.email}),
              method: :post, class: 'button large success expanded'
      - if @limiter.sign_ups_started?
        - if user_signed_in?
          - if @current_user_sign_up.present?
            - if @course.price
              - unless @current_user_sign_up.payment.paid?
                - if @course.cash
                  .callout
                    | E-mailem dostaniesz informacje od koordynatora w jaki sposób dokonać opłaty za wydarzenie.
                - else
                  - if @course.open || @course.limit == 0
                  - else
                    - if @limiter.in_limit?(@current_user_sign_up)
                      = link_to 'Opłać', charge_payment_url(@current_user_sign_up.payment.id), class: 'button expanded large'
                      .callout.success
                        | Zmieściłeś się w limicie prosimy opłać jak najszybciej swój zapis aby nie blokować miejsca
                    - else
                      .callout.warning
                        | Nie zmieściłeś się w limicie, jeżeli zwolni się miejsce, zostaniesz o tym poinformowany e-mailowo.
      = link_to 'pozostałe wydarzenia', supplementary_courses_path, class: 'button expanded large secondary'
      - if user_signed_in?
        - if current_user.admin? || current_user.roles.include?('events')
          = link_to 'Edytuj', edit_supplementary_course_path(@course.id), class: 'button alert expanded large'
  .row
    .large-12.columns
      - if @course.remarks.present?
        br
        b = t('.remarks')
        br
        .callout
          = simple_format @course&.remarks&.html_safe

  - if user_signed_in? && !@limiter.open?
    .row
      .large-12.columns
        h4 Zapisani
        - all_prepaid = @limiter.all_prepaid
        = render 'table_participants', sign_ups: all_prepaid, email: false

    - if current_user.admin? || current_user.roles.include?('events')
      .row
        .large-12.columns
          - if all_prepaid.any?
            .callout
              = all_prepaid.map(&:email).join(', ')

    .row
      .large-12.columns
        h4 Lista rezerwowa
        - all_unpaid = @limiter.all_unpaid
        = render 'table_participants', sign_ups: all_unpaid, email: true

    - if current_user.admin? || current_user.roles.include?('events')
      .row
        .large-12.columns
          - if all_unpaid.any?
            .callout
              = all_unpaid.map(&:email).join(', ')
