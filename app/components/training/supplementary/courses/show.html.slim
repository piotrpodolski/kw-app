.column
  .row
    .large-12.columns
      h3 = @course.name

  - if @course.baner.present?
    .row
      .large-12.columns
        .text-center
          = image_tag @course.baner.url
          br
          br
  - else
    .row
      .large-12.columns
        .text-center
          = image_tag "#{@course.baner_type}.jpg"
          br
          br
  .row
    .large-4.columns
      b = t('.place')
      = @course&.place
      br
      b = t('.start_date')
      - if @course.start_date.present?
        = @course.start_date&.strftime("%d/%m/%Y %H:%M")
      - else
        = t('.later')
      br
      - if @course&.end_date.present?
        b = t('.end_date')
        = @course&.end_date&.strftime("%d/%m/%Y %H:%M")
        br
      b = t('.application_date')
      = @course&.application_date&.strftime("%d/%m/%Y %H:%M")
      br
      - if @course&.price_kw.present?
        b = t('.application_price_kw')
        = @course&.price_kw
        - if @course.price_kw
          | zł
        br

      - if @course.expired_hours > 0
        b Czas na płatność: 
        = @course.expired_hours
        |  h
        br
      b = t('.organizer')
      = @course&.organizer
      br
      - if @course.last_fee_paid
        b Uczestnicy: 
        Tylko dla członków klubu z opłaconymi składkami
        br
      - else
        b Uczestnicy: 
        Otwarta dla wszystkich wg dostępności miejsc
        br

      b Limit uczestników: 
      = @course.limit
      br
      - if @course.price
        - if @course.sign_ups&.any?
          b Zapisanych: 
          = @limiter.sum
        br
        - if @course.sign_ups&.any?
          b Rezerwowych: 
          = @limiter.all_unpaid&.count
      - else
        - if @course.sign_ups&.any?
          b Zapisanych: 
          = @limiter.all_unpaid&.count

    .large-4.columns
      - if user_signed_in?
        - if current_user.admin? || current_user.roles.include?('events')
          = link_to 'Edytuj', edit_supplementary_course_path(@course.id), class: 'button alert expanded'
          = link_to 'Export do excela', supplementary_course_path(@course.id, format: :xlsx), class: 'button warning expanded'
        - if user_signed_in? && !@limiter.open?
          - if current_user.id == @course.organizator_id
            = form_for :manually_sign_up, url: manually_supplementary_sign_ups_path, method: :put do |a|
              .row
                .large-6.columns
                  = a.text_field :name, placeholder: 'Imię i nazwisko'
                .large-6.columns
                  = a.email_field :email, placeholder: 'E-mail'
              = a.hidden_field :course_id, value: @course.id
              - if @course.packages
                = a.select :supplementary_course_package_type_id,
                @course.package_types.collect {|u| ["#{u.name} - #{u.cost} zł", u.id]}
              = a.submit 'Zapisz i wyślij link do płatności', class: 'button primary expanded'


    .large-4.columns

      = link_to 'Regulamin', page_path('events_rules'), class: 'button expanded large warning'
      - if @current_user_sign_up.present?
      - else
        - if user_signed_in?
          - if @limiter.sign_ups_started? && !@limiter.open?
            - if @limiter.sign_ups_reached?
              - if @course.reserve_list
                = form_for :sign_up, url: supplementary_sign_ups_path do |z|
                  = z.hidden_field :course_id, value: @course.id
                  = z.hidden_field :user_id, value: current_user.id
                  = z.hidden_field :email, value: current_user.email
                  = z.hidden_field :name, value: current_user.display_name
                  - if @course.price
                    - if @course.packages
                      = z.select :supplementary_course_package_type_id,
                      @course.package_types.collect {|u| ["#{u.name} - #{u.cost} zł", u.id]},
                      include_blank: 'Wybierz pakiet'
                  = z.submit 'Zapisz na listę rezerwową', class: 'button large secondary expanded'
                  .callout.secondary
                    | Limit miejsc został wyczerpany ale możesz zapisać się na 
                    | listę rezerwową i poczekać na zwiększenie limitu.
                    br
                    b Jeżeli zwolni się miejsce zostaniesz powiadomiony e-mailem.
              - else
                .callout.warning
                  | Limit miejsc został wyczerpany.
            - else
              = form_for :sign_up, url: supplementary_sign_ups_path do |z|
                = z.hidden_field :course_id, value: @course.id
                = z.hidden_field :user_id, value: current_user.id
                = z.hidden_field :email, value: current_user.email
                = z.hidden_field :name, value: current_user.display_name
                - if @course.price
                  - if @course.packages
                    = z.select :supplementary_course_package_type_id,
                    @course.package_types.collect {|u| ["#{u.name} - #{u.cost} zł", u.id]},
                    include_blank: 'Wybierz pakiet'
                = z.submit 'Zapisz się', class: 'button large success expanded'
        - else
          - if @course.last_fee_paid
            = button_to 'Zaloguj się aby zapisać!', '/zaloguj', class: 'button large alert expanded disabled', method: :get
          -else
            - if @limiter.sign_ups_started? && !@limiter.open?
              - if @limiter.sign_ups_reached?
                .callout.warning
                  | Limit miejsc został wyczerpany.
              - else
                .callout.secondary
                  | Twój e-mail wykasujemy z bazy zaraz po zakończeniu wydarzenia.
                = form_for :sign_up, url: supplementary_sign_ups_path do |x|
                  = x.hidden_field :course_id, value: @course.id
                  = x.text_field :name, placeholder: 'Imię i nazwisko'
                  = x.email_field :email, placeholder: 'E-mail'
                  - if @course.price
                    - if @course.packages
                      = x.select :supplementary_course_package_type_id,
                      @course.package_types.collect {|u| ["#{u.name} - #{u.cost} zł", u.id]},
                      include_blank: 'Wybierz pakiet'
                  = x.submit 'Zapisz się', class: 'button large success expanded'
      - if @limiter.sign_ups_started?
        - if user_signed_in?
          - if @current_user_sign_up.present?
            - if @course.price
              - unless @current_user_sign_up.payment.paid?
                - if @course.cash
                  .callout
                    | E-mailem dostaniesz informacje od koordynatora w jaki sposób dokonać opłaty za wydarzenie.
                - else
                  - if @course.open || @course.limit == 0
                  - else
                    - if @limiter.in_limit?(@current_user_sign_up)
                      = link_to 'Opłać', charge_payment_url(@current_user_sign_up.payment.id), class: 'button expanded large'
                      - if @course.expired_hours.zero?
                        .callout.success
                          | Zmieściłeś się w limicie prosimy opłać jak najszybciej swój zapis aby nie blokować miejsca
                      - else
                        .callout.success
                          | Zmieściłeś się w limicie.
                          br
                          | Opłać zapis do: 
                          = @current_user_sign_up.expired_at&.strftime("%d/%m/%Y %R")
                          br
                          b Po tym czasie twój zapis zostanie usunięty.
                    - else
                      .callout.warning
                        | Nie zmieściłeś się w limicie, jeżeli zwolni się miejsce, zostaniesz o tym poinformowany e-mailowo.
      = link_to 'pozostałe wydarzenia', wydarzenia_path, class: 'button expanded large hollow'
  .row
    - if user_signed_in?
      .large-6.columns
        - if @course&.package_types.present?
          b Pakiety: 
          ul
            - @course.package_types.each do |p|
              li = "#{p.name} - #{p.cost} zł (#{@limiter.all_prepaid.where(supplementary_course_package_type_id: p.id)&.count})"
        - if @course.remarks.present?
          h5 = t('.remarks')
          .callout
            = sanitize @course&.remarks
      - if @course.price
        .large-6.columns
          - if !@limiter.open?
            h5 Zapisani uczestnicy
            - all_prepaid = @limiter.all_prepaid
            = render 'table_participants', sign_ups: all_prepaid, email: false

            - if current_user.admin? || current_user.roles.include?('events')
              - if all_prepaid.any?
                .callout
                  = all_prepaid.map(&:email).join(', ')

            - if current_user.admin? || current_user.roles.include?('events')
              - all_refunded = @limiter.all_refunded
              - if all_refunded.any?
                h5 Zlecone zwroty
                = render 'table_participants', sign_ups: all_refunded, email: false

                .callout
                  = all_refunded.map(&:email).join(', ')

        .large-6.columns
          h5 Lista rezerwowa
          - all_unpaid = @limiter.all_unpaid
          = render 'table_participants', sign_ups: all_unpaid, email: true

          - if current_user.admin? || current_user.roles.include?('events')
            - if all_unpaid.any?
              .callout
                = all_unpaid.map(&:email).join(', ')

      - else
        - unless @course.open
          .large-6.columns
            h5 Lista uczestników
            - all_unpaid = @limiter.all_unpaid
            = render 'table_participants', sign_ups: all_unpaid, email: true

            - if current_user.admin? || current_user.roles.include?('events')
              - if all_unpaid.any?
                .callout
                  = all_unpaid.map(&:email).join(', ')
    - else
      .large-12.columns
        - if @course.remarks.present?
          h5 = t('.remarks')
          .callout
            = sanitize @course&.remarks
