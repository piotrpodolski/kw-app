.column
  .row
    .large-12.columns
      h3 = @course.name

  .row
    .large-6.columns
      b = t('.place')
      = @course&.place
      br
      b = t('.start_date')
      - if @course.start_date.present?
        = @course.start_date&.strftime("%d/%m/%Y %H:%M")
      - else
        = t('.later')
      br
      - if @course&.end_date.present?
        b = t('.end_date')
        = @course&.end_date&.strftime("%d/%m/%Y %H:%M")
        br
      b = t('.application_date')
      = @course&.application_date&.strftime("%d/%m/%Y %H:%M")
      br
      - if @course&.price_kw.present?
        b = t('.application_price_kw')
        = @course&.price_kw
        - if @course.price_kw
          | zł
        br
      b = t('.organizer')
      = @course&.organizer
      br
      b Limit: 
      = @course.limit
      br
      - if @course.sign_ups&.any?
        b Zapisani: 
        = Training::Supplementary::Limiter.new(@course).sum
      br
      - if @course.sign_ups&.any?
        b Rezerwowi:
        = Training::Supplementary::Limiter.new(@course).all_unpaid&.count

    .large-6.columns
      = link_to 'Regulamin', page_path('events_rules'), class: 'button expanded large warning'
      - if @current_user_sign_up.present?
      - else
        - if user_signed_in?
          - if Training::Supplementary::Limiter.new(@course).sign_ups_started?
            = link_to t('.sign_up'), supplementary_sign_ups_path(sign_up: {course_id: @course.id, user_id: current_user.id, email: current_user.email}),
              method: :post, class: 'button large success expanded'
      - unless Training::Supplementary::Limiter.new(@course).reached?
        - if Training::Supplementary::Limiter.new(@course).sign_ups_started?
          - if user_signed_in?
            - if @current_user_sign_up.present?
              - if @course.price
                - if @current_user_sign_up.payment.paid?
                  span class='label success'
                    | Opłacono
                - else
                  - if @course.cash
                    .callout
                      | E-mailem dostaniesz informacje od koordynatora w jaki sposób dokonać opłaty za wydarzenie.
                  - else
                    = link_to 'Opłać', charge_payment_url(@current_user_sign_up.payment.id, reached: Training::Supplementary::Limiter.new(@course).reached?), class: 'button large expanded'
              - else
                = link_to 'Wypisz się!', polish_event_cancel_url(code: @current_user_sign_up.code)
      = link_to 'pozostałe wydarzenia', supplementary_courses_path, class: 'button expanded large secondary'
      - if user_signed_in?
        - if current_user.admin? || current_user.roles.include?('events')
          = link_to 'Edytuj', edit_supplementary_course_path(@course.id), class: 'button alert expanded large'
  .row
    .large-12.columns
      - if @course.remarks.present?
        br
        b = t('.remarks')
        br
        .callout
          = simple_format @course&.remarks&.html_safe

  - if user_signed_in?
    .row
      .large-12.columns
        h4 Zapisani
        = render 'table_participants', sign_ups: Training::Supplementary::Limiter.new(@course).all_prepaid

    .row
      .large-12.columns
        h4 Lista rezerwowa
        = render 'table_participants', sign_ups: Training::Supplementary::Limiter.new(@course).all_unpaid

  - if user_signed_in? && (current_user.admin? || current_user.roles.include?('events'))
    .row
      .large-12.columns
        - if @course&.sign_ups&.any?
          .callout
            = @course&.sign_ups&.map(&:email).join(', ')
